name: Build PX4 FMUv3 with inverted roll

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout PX4 Autopilot
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install APT dependencies
        run: |
          sudo apt update
          sudo apt install -y \
            python3 python3-pip python3-dev python3-setuptools python3-wheel \
            git wget curl zip unzip tar cmake ninja-build build-essential \
            gcc-arm-none-eabi gdb-arm-none-eabi \
            python3-jinja2 python3-numpy python3-empy python3-toml \
            python3-pandas python3-yaml python3-serial python3-pyparsing \
            python3-cerberus python3-kconfiglib

      - name: Install Python tools
        run: |
          python3 -m pip install --upgrade pip
          pip3 install \
            empy toml numpy pandas jinja2 pyserial pyyaml \
            cerberus kconfiglib pyulog packaging wheel

      - name: Apply roll inversion patch
        run: |
          git apply <<'PATCH'
diff --git a/src/modules/fw_att_control/FixedwingAttitudeControl.cpp b/src/modules/fw_att_control/FixedwingAttitudeControl.cpp
index 9d8f4a6..b3c4e12 100644
--- a/src/modules/fw_att_control/FixedwingAttitudeControl.cpp
+++ b/src/modules/fw_att_control/FixedwingAttitudeControl.cpp
@@ -426,7 +426,7 @@ void FixedwingAttitudeControl::control_attitude(const matrix::Quatf &q, float dt)
     // compute roll setpoint
     float roll_sp = _att_sp.roll_body * _params.roll_lim;
-    _roll_ctrl.set_bodyrate_setpoint(roll_sp, current_rate.roll, dt);
+    _roll_ctrl.set_bodyrate_setpoint(-roll_sp, current_rate.roll, dt);
PATCH

      - name: Build PX4 FMUv3 firmware
        run: |
          make px4_fmu-v3_default

      - name: Upload firmware artifact
        uses: actions/upload-artifact@v3
        with:
          name: px4_fmu-v3_inverted-roll
          path: build/px4_fmu-v3_default/px4_fmu-v3_default.px4
